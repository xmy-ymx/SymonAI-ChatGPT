"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Geo = require("./geo/index");
const collection_1 = require("./collection");
const command_1 = require("./command");
const index_1 = require("./serverDate/index");
const index_2 = require("./regexp/index");
const bson_1 = require("bson");
var query_1 = require("./query");
exports.Query = query_1.Query;
var collection_2 = require("./collection");
exports.CollectionReference = collection_2.CollectionReference;
var document_1 = require("./document");
exports.DocumentReference = document_1.DocumentReference;
/**
 * 数据库模块
 *
 */
class Db {
    constructor(config) {
        var _a;
        /**
         * Geo 类型
         */
        this.Geo = Geo;
        /**
         * 逻辑操作的命令
         */
        this.command = command_1.Command;
        /**
         * This method was deprecated, use js native `new RegExp()` instead
         * @deprecated
         */
        this.RegExp = index_2.RegExpConstructor;
        /**
         * This method is deprecated, not implemented in server side
         * @deprecated
         */
        this.serverDate = index_1.ServerDateConstructor;
        if (!config.request) {
            throw new Error('DbConfig.request cannot be empty');
        }
        this.request = config.request;
        this.primaryKey = (_a = config.primaryKey) !== null && _a !== void 0 ? _a : '_id';
    }
    /**
     * 获取集合的引用
     *
     * @param collName - 集合名称
     */
    collection(collName) {
        if (!collName) {
            throw new Error('Collection name is required');
        }
        return new collection_1.CollectionReference(this, collName);
    }
    /**
     * Generate a hex string id for document
     * @returns
     */
    generateId() {
        const id = new bson_1.ObjectId();
        return id.toHexString();
    }
    /**
     * Wrapper for ObjectId() of mongodb
     * @param params
     * @returns
     */
    ObjectId(id) {
        return new bson_1.ObjectId(id);
    }
}
exports.Db = Db;
