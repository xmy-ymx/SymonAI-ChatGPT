import { SYMBOL_REGEXP } from '../helper/symbol';
/**
 * @deprecated This method was deprecated, use js native `RegExp` instead
 */
var RegExp = /** @class */ (function () {
    function RegExp(_a) {
        var regexp = _a.regexp, options = _a.options;
        if (!regexp) {
            throw new TypeError('regexp must be a string');
        }
        this.$regex = regexp;
        this.$options = options || '';
    }
    RegExp.prototype.parse = function () {
        return {
            $regex: this.$regex,
            $options: this.$options
        };
    };
    Object.defineProperty(RegExp.prototype, "_internalType", {
        get: function () {
            return SYMBOL_REGEXP;
        },
        enumerable: true,
        configurable: true
    });
    return RegExp;
}());
export { RegExp };
/**
 * @deprecated This method was deprecated, use js native `RegExp` instead
 * @param param
 * @returns
 */
export function RegExpConstructor(param) {
    return new RegExp(param);
}
