import * as Geo from './geo/index';
import { CollectionReference } from './collection';
import { Command } from './command';
import { ServerDateConstructor } from './serverDate/index';
import { RegExpConstructor } from './regexp/index';
import { ObjectId } from 'bson';
export { Query } from './query';
export { CollectionReference } from './collection';
export { DocumentReference } from './document';
/**
 * 数据库模块
 *
 */
var Db = /** @class */ (function () {
    function Db(config) {
        var _a;
        /**
         * Geo 类型
         */
        this.Geo = Geo;
        /**
         * 逻辑操作的命令
         */
        this.command = Command;
        /**
         * This method was deprecated, use js native `new RegExp()` instead
         * @deprecated
         */
        this.RegExp = RegExpConstructor;
        /**
         * This method is deprecated, not implemented in server side
         * @deprecated
         */
        this.serverDate = ServerDateConstructor;
        if (!config.request) {
            throw new Error('DbConfig.request cannot be empty');
        }
        this.request = config.request;
        this.primaryKey = (_a = config.primaryKey) !== null && _a !== void 0 ? _a : '_id';
    }
    /**
     * 获取集合的引用
     *
     * @param collName - 集合名称
     */
    Db.prototype.collection = function (collName) {
        if (!collName) {
            throw new Error('Collection name is required');
        }
        return new CollectionReference(this, collName);
    };
    /**
     * Generate a hex string id for document
     * @returns
     */
    Db.prototype.generateId = function () {
        var id = new ObjectId();
        return id.toHexString();
    };
    /**
     * Wrapper for ObjectId() of mongodb
     * @param params
     * @returns
     */
    Db.prototype.ObjectId = function (id) {
        return new ObjectId(id);
    };
    return Db;
}());
export { Db };
