/**
 * 常量模块
 *
 * @author haroldhu
 */
/**
 * 错误码
 */
declare enum ErrorCode {
    DocIDError = "\u6587\u6863ID\u4E0D\u5408\u6CD5",
    CollNameError = "\u96C6\u5408\u540D\u79F0\u4E0D\u5408\u6CD5",
    OpStrError = "\u64CD\u4F5C\u7B26\u4E0D\u5408\u6CD5",
    DirectionError = "\u6392\u5E8F\u5B57\u7B26\u4E0D\u5408\u6CD5",
    IntegerError = "must be integer",
    QueryParamTypeError = "\u67E5\u8BE2\u53C2\u6570\u5FC5\u987B\u4E3A\u5BF9\u8C61",
    QueryParamValueError = "\u67E5\u8BE2\u53C2\u6570\u5BF9\u8C61\u503C\u4E0D\u80FD\u5747\u4E3Aundefined"
}
/**
 * 字段类型
 */
declare const FieldType: {
    String: string;
    Number: string;
    Object: string;
    Array: string;
    Boolean: string;
    Null: string;
    GeoPoint: string;
    GeoLineString: string;
    GeoPolygon: string;
    GeoMultiPoint: string;
    GeoMultiLineString: string;
    GeoMultiPolygon: string;
    Timestamp: string;
    Command: string;
    ServerDate: string;
    BsonDate: string;
    ObjectId: string;
    Binary: string;
};
/**
 * 排序方向
 */
declare type OrderByDirection = 'desc' | 'asc';
/**
 * 排序方向列表
 */
declare const OrderDirectionList: string[];
/**
 * 查询条件操作符
 */
declare type WhereFilterOp = '<' | '<=' | '==' | '>=' | '>';
/**
 * 操作符列表
 */
declare const WhereFilterOpList: string[];
/**
 * 操作符别名
 */
declare enum Operator {
    lt = "<",
    gt = ">",
    lte = "<=",
    gte = ">=",
    eq = "=="
}
/**
 * 操作符映射
 * SDK => MongoDB
 */
declare const OperatorMap: {
    "==": string;
    "<": string;
    "<=": string;
    ">": string;
    ">=": string;
};
declare const UpdateOperatorList: string[];
declare enum ActionType {
    add = "database.addDocument",
    query = "database.queryDocument",
    update = "database.updateDocument",
    count = "database.countDocument",
    remove = "database.deleteDocument",
    aggregate = "database.aggregateDocuments"
}
export { ErrorCode, FieldType, WhereFilterOp, WhereFilterOpList, Operator, OperatorMap, OrderByDirection, OrderDirectionList, UpdateOperatorList, ActionType };
