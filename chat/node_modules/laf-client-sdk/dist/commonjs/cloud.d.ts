import { Db } from 'database-ql';
import { Request } from './request/request';
import { CloudOptions, RequestInterface } from './types';
/**
 * class Cloud provide the interface to request cloud function and cloud database.
 */
declare class Cloud {
    private config;
    /**
     * request class by environment
     */
    private get requestClass();
    /**
     * internal request class
     */
    protected _request: RequestInterface;
    /**
     * Create a cloud instance
     * @param config
     */
    constructor(config: CloudOptions);
    /**
     * Get a cloud database instance
     * @returns
     */
    database(): Db;
    /**
     * Invoke cloud function by name use POST http method
     * @alias alias of `invoke()` for history reason
     * @param functionName
     * @param data
     * @returns
     */
    invokeFunction<T = any>(functionName: string, data: any): Promise<T>;
    /**
     * Invoke cloud function by name use POST http method
     * @param functionName
     * @param data
     * @returns
     */
    invoke<T = any>(functionName: string, data: any): Promise<T>;
}
export { Cloud, Db, Request };
