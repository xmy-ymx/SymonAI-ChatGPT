import { Db } from './index';
import { AddRes, GetOneRes, RemoveRes, UpdateRes } from './result-types';
import { ProjectionType } from './interface';
import { Query } from './query';
/**
 * Db document
 */
export declare class DocumentReference {
    /**
     * document id
     */
    readonly id: any;
    /**
     * query object
     */
    private _query;
    /**
     * db reference
     */
    private _db;
    /**
     * collection name
     */
    readonly _coll: string;
    /**
     * @param db    - db ref
     * @param coll  - collection
     * @param docID - document id
     */
    constructor(db: Db, coll: string, docID: any, query?: Query);
    /**
     * 创建一篇文档
     *
     * @param data - document data
     */
    create(data: any, options?: {
        multi: boolean;
    }): Promise<AddRes>;
    /**
     * 创建或添加数据
     *
     * 如果该文档 ID 在数据库中不存在，则创建该文档并插入数据，根据返回数据的 upsertId 判断
     *
     * @param data - document data
     */
    set(data: Object): Promise<UpdateRes>;
    /**
     * 更新数据
     *
     * @param data - 文档数据
     */
    update(data: Object): Promise<UpdateRes>;
    /**
     * 删除文档
     */
    remove(): Promise<RemoveRes>;
    /**
     * 返回选中的文档
     */
    get<T = any>(): Promise<GetOneRes<T>>;
    /**
     * 指定要返回的字段
     *
     * @param projection
     */
    field(projection: string[] | ProjectionType): DocumentReference;
}
