import * as Geo from './geo/index';
import { CollectionReference } from './collection';
import { Command } from './command';
import { ServerDateConstructor } from './serverDate/index';
import { RegExpConstructor } from './regexp/index';
import { RequestInterface } from './interface';
import { ObjectId } from 'bson';
/**
 * 地理位置类型
*/
interface GeoType {
    Point: typeof Geo.Point;
    LineString: typeof Geo.LineString;
    Polygon: typeof Geo.Polygon;
    MultiPoint: typeof Geo.MultiPoint;
    MultiLineString: typeof Geo.MultiLineString;
    MultiPolygon: typeof Geo.MultiPolygon;
}
export { Query } from './query';
export { CollectionReference } from './collection';
export { DocumentReference } from './document';
export { RequestInterface } from './interface';
interface DbConfig {
    /**
     * Primary key, default is '_id'
     */
    primaryKey?: string;
    /**
     * Request instance
     */
    request: RequestInterface;
}
/**
 * 数据库模块
 *
 */
export declare class Db {
    /**
     * Geo 类型
     */
    readonly Geo: GeoType;
    /**
     * 逻辑操作的命令
     */
    readonly command: typeof Command;
    /**
     * This method was deprecated, use js native `new RegExp()` instead
     * @deprecated
     */
    readonly RegExp: typeof RegExpConstructor;
    /**
     * This method is deprecated, not implemented in server side
     * @deprecated
     */
    readonly serverDate: typeof ServerDateConstructor;
    readonly primaryKey: string;
    readonly request: RequestInterface;
    constructor(config?: DbConfig);
    /**
     * 获取集合的引用
     *
     * @param collName - 集合名称
     */
    collection(collName: string): CollectionReference;
    /**
     * Generate a hex string id for document
     * @returns
     */
    generateId(): string;
    /**
     * Wrapper for ObjectId() of mongodb
     * @param params
     * @returns
     */
    ObjectId(id?: string | number | ObjectId): ObjectId;
}
