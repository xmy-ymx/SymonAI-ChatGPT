import { EJSON } from 'bson';
import { isObject } from './type';
export var sleep = function (ms) {
    if (ms === void 0) { ms = 0; }
    return new Promise(function (r) { return setTimeout(r, ms); });
};
var counters = {};
export var autoCount = function (domain) {
    if (domain === void 0) { domain = 'any'; }
    if (!counters[domain]) {
        counters[domain] = 0;
    }
    return counters[domain]++;
};
// 递归过滤对象中的undefiend字段
export var filterUndefined = function (o) {
    // 如果不是对象类型，直接返回
    if (!isObject(o)) {
        return o;
    }
    for (var key in o) {
        if (o[key] === undefined) {
            delete o[key];
        }
        else if (isObject(o[key])) {
            o[key] = filterUndefined(o[key]);
        }
    }
    return o;
};
export var stringifyByEJSON = function (params) {
    // params中删除undefined的key
    params = filterUndefined(params);
    return EJSON.stringify(params, { relaxed: false });
};
export var parseByEJSON = function (params) {
    return EJSON.parse(params);
};
