var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { DocumentReference } from './document';
import { Query } from './query';
import Aggregation from './aggregate';
/**
 * 集合模块，继承 Query 模块
 *
 */
var CollectionReference = /** @class */ (function (_super) {
    __extends(CollectionReference, _super);
    /**
     * 初始化
     *
     * @internal
     *
     * @param db    - 数据库的引用
     * @param coll  - 集合名称
     */
    function CollectionReference(db, coll) {
        return _super.call(this, db, coll) || this;
    }
    Object.defineProperty(CollectionReference.prototype, "name", {
        /**
         * 读取集合名字
         */
        get: function () {
            return this._coll;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 获取文档的引用
     *
     * @param docID - 文档 ID
     */
    CollectionReference.prototype.doc = function (docID) {
        if (!docID) {
            throw new Error('docID cannot be empty');
        }
        return new DocumentReference(this._db, this._coll, docID);
    };
    /**
     * 添加一篇文档
     *
     * @param data - 数据
     */
    CollectionReference.prototype.add = function (data, options) {
        var docRef = new DocumentReference(this._db, this._coll, undefined);
        return docRef.create(data, options);
    };
    CollectionReference.prototype.aggregate = function (rawPipeline) {
        if (rawPipeline === void 0) { rawPipeline = []; }
        return new Aggregation(this._db, this._coll, rawPipeline);
    };
    return CollectionReference;
}(Query));
export { CollectionReference };
