"use strict";
/**
 * 常量模块
 *
 * @author haroldhu
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 错误码
 */
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["DocIDError"] = "\u6587\u6863ID\u4E0D\u5408\u6CD5";
    ErrorCode["CollNameError"] = "\u96C6\u5408\u540D\u79F0\u4E0D\u5408\u6CD5";
    ErrorCode["OpStrError"] = "\u64CD\u4F5C\u7B26\u4E0D\u5408\u6CD5";
    ErrorCode["DirectionError"] = "\u6392\u5E8F\u5B57\u7B26\u4E0D\u5408\u6CD5";
    ErrorCode["IntegerError"] = "must be integer";
    ErrorCode["QueryParamTypeError"] = "\u67E5\u8BE2\u53C2\u6570\u5FC5\u987B\u4E3A\u5BF9\u8C61";
    ErrorCode["QueryParamValueError"] = "\u67E5\u8BE2\u53C2\u6570\u5BF9\u8C61\u503C\u4E0D\u80FD\u5747\u4E3Aundefined";
})(ErrorCode || (ErrorCode = {}));
exports.ErrorCode = ErrorCode;
/**
 * 字段类型
 */
const FieldType = {
    String: 'String',
    Number: 'Number',
    Object: 'Object',
    Array: 'Array',
    Boolean: 'Boolean',
    Null: 'Null',
    GeoPoint: 'GeoPoint',
    GeoLineString: 'GeoLineString',
    GeoPolygon: 'GeoPolygon',
    GeoMultiPoint: 'GeoMultiPoint',
    GeoMultiLineString: 'GeoMultiLineString',
    GeoMultiPolygon: 'GeoMultiPolygon',
    Timestamp: 'Date',
    Command: 'Command',
    ServerDate: 'ServerDate',
    BsonDate: 'BsonDate',
    ObjectId: 'ObjectId',
    Binary: 'Binary'
};
exports.FieldType = FieldType;
/**
 * 排序方向列表
 */
const OrderDirectionList = ['desc', 'asc'];
exports.OrderDirectionList = OrderDirectionList;
/**
 * 操作符列表
 */
const WhereFilterOpList = ['<', '<=', '==', '>=', '>'];
exports.WhereFilterOpList = WhereFilterOpList;
/**
 * 操作符别名
 */
var Operator;
(function (Operator) {
    Operator["lt"] = "<";
    Operator["gt"] = ">";
    Operator["lte"] = "<=";
    Operator["gte"] = ">=";
    Operator["eq"] = "==";
})(Operator || (Operator = {}));
exports.Operator = Operator;
/**
 * 操作符映射
 * SDK => MongoDB
 */
const OperatorMap = {
    [Operator.eq]: '$eq',
    [Operator.lt]: '$lt',
    [Operator.lte]: '$lte',
    [Operator.gt]: '$gt',
    [Operator.gte]: '$gte'
};
exports.OperatorMap = OperatorMap;
const UpdateOperatorList = [
    '$set',
    '$inc',
    '$mul',
    '$unset',
    '$push',
    '$pop',
    '$unshift',
    '$shift',
    '$currentDate',
    '$each',
    '$position'
];
exports.UpdateOperatorList = UpdateOperatorList;
var ActionType;
(function (ActionType) {
    ActionType["add"] = "database.addDocument";
    ActionType["query"] = "database.queryDocument";
    ActionType["update"] = "database.updateDocument";
    ActionType["count"] = "database.countDocument";
    ActionType["remove"] = "database.deleteDocument";
    ActionType["aggregate"] = "database.aggregateDocuments";
})(ActionType || (ActionType = {}));
exports.ActionType = ActionType;
